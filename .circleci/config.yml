# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details


version: 2
jobs:
  build:
    docker:
      - image: mcasl/circleci_pipegraph:0.0.5
        environment:
          - USERNAME: "mcasl"
          - DOC_REPO: "PipeGraph"
          - DOC_URL: "https://mcasl.github.io/PipeGraph/"
          - EMAIL: "manuel.castejon@gmail.com"
    working_directory: ~/PipeGraph
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest  cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install requirements.txt
          command: |
            python3 -m venv %HOME/venv
            . $HOME/venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - $HOME/venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Run unitary tests
          command: |
            . $HOME/venv/bin/activate
            mkdir test-reports
            python -m pytest --junitxml=test-reports/junit.xml pipegraph/tests
      - store_test_results:
            path: test-reports
      - store_artifacts:
            path: test-reports

  deploy:
    docker:
      - image: mcasl/circleci_pipegraph:0.0.5
        environment:
          - USERNAME: "mcasl"
          - DOC_REPO: "PipeGraph"
          - DOC_URL: "https://mcasl.github.io/PipeGraph/"
          - EMAIL: "manuel.castejon@gmail.com"
    working_directory: ~/PipeGraph
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest  cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install dependencies on requirements.txt
          command: |
            python3 -m venv %HOME/venv
            . $HOME/venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - $HOME/venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Verify Git Tag vs. Version
          command: |
            . $HOME/venv/bin/activate
            python setup.py verify

      - run:
          name: Create package
          command: |
            . $HOME/venv/bin/activate
            python setup.py sdist bdist_wheel

      - run:
          name: Twine upload
          command: |
            . $HOME/venv/bin/activate
#  twine upload  -u $PYPI_USERNAME -p $PYPI_PASSWORD  dist/*

      - deploy:
          name: Make HTML documentation
          command: |
            . $HOME/venv/bin/activate
            python setup.py clean
            python setup.py develop
            set -o pipefail && cd doc && make html 2>&1 | tee ~/log.txt
            sudo cat ~/log.txt && if grep -q "Traceback (most recent call last):" ~/log.txt; then false; else true; fi
            $HOME/$DOC_REPO/ci_scripts/circleci/push_doc.sh _build/html
      - store_artifacts:
            path: doc/_build/html
            destination: ~/log.txt


workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: gh-pages
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/


